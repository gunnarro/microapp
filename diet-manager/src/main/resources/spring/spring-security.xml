<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/security
                           http://www.springframework.org/schema/security/spring-security.xsd">


	<!-- Enable use of secured annotation -->
	<security:global-method-security pre-post-annotations="enabled" />
	
 	<!-- use custom provider, pick one only -->
	<security:authentication-manager>
		<!--  <security:authentication-provider user-service-ref="localUserDetailsService" /> -->
		<!--  <security:authentication-provider ref="customAuthenticationProvider"/> -->
		<security:authentication-provider ref="authProvider"/>
	</security:authentication-manager>
 
	<security:http auto-config="true" use-expressions="true">
		<security:csrf disabled="true"/>
		<!-- The more specific rules need to come first, followed by the more general ones. -->
		<!-- In order to use HTTPS only, set requires-channel="https" -->
      	<security:intercept-url pattern="/admin/**" access="hasRole('ROLE_ADMIN')" />
		<security:intercept-url pattern="/login*" access="permitAll" />
		<security:intercept-url pattern="/resources/**" access="permitAll" />
		<!-- for access local bootstrap resources -->
		<security:intercept-url pattern="/webjars/**" access="permitAll" />
      	<security:intercept-url pattern="/**" access="isAuthenticated()" />
      	<!-- 
		<security:intercept-url pattern="/login" access="hasRole('ROLE_ANONYMOUS')" requires-channel="any"/>
		<security:intercept-url pattern="/perform-login" access="hasRole('ROLE_ANONYMOUS')" requires-channel="any"/>
		<security:intercept-url pattern="/admin/**" access="hasRole('ROLE_ADMIN')"/>
		<security:intercept-url pattern="/rest/**" access="hasRole('ROLE_USER')" />
		<security:intercept-url pattern="/user/**" access="hasRole('ROLE_USER')"/>
		<security:intercept-url pattern="/diet/**" access="hasRole('ROLE_USER')"/>
		-->
		
		<!-- If not standard ports are used 
		<security:port-mappings>
      		<security:port-mapping http="80" https="443"/>
    	</security:port-mappings>
		 -->
		  
		<security:form-login login-page="/login" 
							authentication-failure-url="/login?login_error=1" 
							default-target-url="/home" 
							login-processing-url="/perform-login"
							always-use-default-target="true"
							username-parameter="username"
							password-parameter="password" 
							 />
		<!-- 
		<security:remember-me data-source-ref="dataSource" key="secret_remember_me" />
		 -->
		  <!--
		 logout is done in the loginController 
		-->
		<security:logout invalidate-session="true"
						delete-cookies="JSESSIONID" 
						logout-url="/perform-logout" 
						logout-success-url="/login?loggedout"/>

		<security:access-denied-handler error-page="/access-denied" />

		<security:session-management invalid-session-url="/login?cause=invalid-session" session-fixation-protection="newSession" >
			<security:concurrency-control  session-registry-alias="sessionRegistry" 
											max-sessions="1" 
											expired-url="/login?cause=session-expired" 
											error-if-maximum-exceeded="true" />
		</security:session-management>

	</security:http>
	
</beans>